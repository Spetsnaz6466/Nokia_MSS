function oMSS_Users_definition()
  string PCTime,PCTime2,USER; 
  integer x,y,m; 
  
 /*#######################
  # MACRO CONFIGURACION  #
  ########################*/
  m=1;  // Primer MSS a trabajar at function Claro_MSS()
  y=48; // Ultimo MSS's a trabajar
  USER="NKFNAB"; /* Set USER */
  ask(USER,"Ingrese User Name a buscar: ");
  
  PCTime = getpctime(1); 
  for(x=m;x<=y; x++) 
    LOG_SQUARE("blue",Claro_MSS(x));  print("ACCESING %d/%d: %s\n",x,y,Claro_MSS(x) );
    Users_definition(Claro_MSS(x),USER);
  endfor
  PCTime2 = getpctime(1);
  print("Hora inicio de macro: %s\n",PCTime);
  print("Hora fin de macro: %s\n",PCTime2);
  print("FIN!!!!");
  
endfunction

/*########################
  # FUNCIONES - NO TOCAR #
  ########################*/

void function Users_definition(string CLARO_MSS,string USER)
 string PCTime,filename,A="l",B="l",line,temp;
 integer handle;
  
 device(CLARO_MSS);
   if(sniff()) 
     temp="Acceso Comprobado a MSS: " + CLARO_MSS + "\n"; printColor("green",temp);
     if(getline(line,"'EXPIRE'")) print("\nTHE PASSWORD HAS EXPIRED\n"); endif   ////// 
     tx("ZDCD;");     
       if(getline(line,"':'")) strscan(line,"%s %s %s",A,A,B); B=strreplace(B,":","-"); endif
       PCTime = A + "_" + B; filename= CLARO_MSS + "_" + "MML_" + PCTime + "_.TXT" ; 
       handle = fileopen(filename,NEW); fileclose(handle); logenable(LOG_ENABLE_ALL); logset(filename,APPEND);       
     tx("ZIAI:USERID=%s:COM;",USER);
       if(getline(line,"'USER ID NOT FOUND'")) 
          COLOR_PHRASE("red","USER " + USER + " NOT FOUND" );         
       elseif(getline(line,"'VALIDITY TIME LEFT:'")) 
         line="USER_ID: " + USER + " -- " + line;
         print(line); 
       endif   
    deviceclose(CLARO_MSS); 
   else
    deviceclose();
    temp="Sin acceso a MSS: " + CLARO_MSS + "\n";
    printColor("red",temp);
  endif
  print("\n");
 endfunction 
 
string function Claro_MSS (integer x)
  string CLARO_MSS[];
  CLARO_MSS[1]="MSS01ING";
  CLARO_MSS[2]="MSS01PER";
  CLARO_MSS[3]="MSS01SIN";
  CLARO_MSS[4]="MSS01TOB";
  CLARO_MSS[5]="MSS02ALK";
  CLARO_MSS[6]="MSS02BUC";
  CLARO_MSS[7]="MSS02CAL";
  CLARO_MSS[8]="MSS02MED";
  CLARO_MSS[9]="MSS02PER";
  CLARO_MSS[10]="MSS02SIN";
  CLARO_MSS[11]="MSS02TOB";
  CLARO_MSS[12]="MSS02VEN";
  CLARO_MSS[13]="MSS03ARA";
  CLARO_MSS[14]="MSS03BAR";
  CLARO_MSS[15]="MSS03CAL";
  CLARO_MSS[16]="MSS03MED";
  CLARO_MSS[17]="MSS03PRA";
  CLARO_MSS[18]="MSS03VEN";
  CLARO_MSS[19]="MSS04ARA";
  CLARO_MSS[20]="MSS04CAL";
  CLARO_MSS[21]="MSS04VEN";
  CLARO_MSS[22]="MSS04VEN";
  CLARO_MSS[23]="MSS05ARA";
  CLARO_MSS[24]="MSS05MED";
  CLARO_MSS[25]="MSS05VEN";
  CLARO_MSS[26]="MSS06ARA";
  CLARO_MSS[27]="MSS06MED";
  CLARO_MSS[28]="MSS06VEN";
  CLARO_MSS[29]="MSS07ARA";
  CLARO_MSS[30]="MSS07VEN";
  CLARO_MSS[31]="MSSALK01";
  CLARO_MSS[32]="MSSALK02";
  CLARO_MSS[33]="MSSARA01";
  CLARO_MSS[34]="MSSBUC01";
  CLARO_MSS[35]="MSSING01";
  CLARO_MSS[36]="MSSMAR01";
  CLARO_MSS[37]="MSSMGA01";
  CLARO_MSS[38]="MSSPER01";
  CLARO_MSS[39]="MSSTRI01";
  CLARO_MSS[40]="MSSTRI02";
  CLARO_MSS[41]="MSSTRI03";
  CLARO_MSS[42]="MSSVEN01";
  CLARO_MSS[43]="MSSMGA02";
  CLARO_MSS[44]="MSS01ALK";    
  CLARO_MSS[45]="MSS01CAR";   //SIN ACCESO.
  CLARO_MSS[46]="MSSARA02";
  CLARO_MSS[47]="MSSING02";
  CLARO_MSS[48]="MSSVEN02";
  return CLARO_MSS[x]; 
endfunction

void function COLOR_PHRASE(string color,string information )
 if(color == "red") settextcolor(RGB(200,0,0));
   elseif(color == "yellow") settextcolor(RGB(100,150,0));
   elseif(color == "blue") settextcolor(RGB(0,0,250));
   elseif(color == "green")  settextcolor(RGB(0,200,0));
 endif
 logprint("\n%s\n",information); logprint("\n"); settextcolor(RGB(0,0,0));
endfunction

void function LOG_SQUARE(string color,string information )
 integer x,y=1;
 if(color == "red") settextcolor(RGB(200,0,0));
   elseif(color == "yellow") settextcolor(RGB(100,150,0));
   elseif(color == "blue") settextcolor(RGB(0,0,200));
   elseif(color == "green")  settextcolor(RGB(0,250,100));
 endif
 x = strlength(information); x= x + 4; print("\n"); 
 for(y=1 ; y<=x ; y++) logprint("#"); endfor logprint("\n# %s #\n",information); 
 for(y=1 ; y<=x ; y++) logprint("#"); endfor 
 logprint("\n"); settextcolor(RGB(0,0,0));
endfunction

void function FILE_SQUARE(string information, integer handle2 )
 integer x,y=1; 
 x = strlength(information); x= x + 4;
 fileprint(handle2,"\n"); 
 for(y=1 ; y<=x ; y++) fileprint(handle2,"#"); endfor fileprint(handle2,"\n# %s #\n",information); 
 for(y=1 ; y<=x ; y++) fileprint(handle2,"#"); endfor 
 fileprint(handle2,"\n");
endfunction

void function printColor(string color,string information )
 if(color == "red") settextcolor(RGB(200,0,0));
   elseif(color == "yellow") settextcolor(RGB(100,150,0));
   elseif(color == "blue") settextcolor(RGB(0,0,250));
   elseif(color == "green")  settextcolor(RGB(0,200,220));
 endif
 print("%s",information); settextcolor(RGB(0,0,0));
endfunction